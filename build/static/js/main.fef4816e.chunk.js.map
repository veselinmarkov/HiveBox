{"version":3,"sources":["components/SignupMenu.js","components/ShowHelp.js","components/Navbar.js","api/wordsdb.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","gap","flexDirection","padding","border","borderRadius","backgroundColor","color","inputText","palette","background","default","SignupMenu","props","React","useState","firstName","setFirstName","lastName","setLastName","username","setUsername","password","setPassword","classes","Popover","id","open","anchorEl","anchor","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","className","InputBase","placeholder","onChange","e","target","value","type","Button","onClick","handleSignup","variant","maxWidth","topics","fontSize","marginBottom","paragraph","marginTop","ShowHelp","appBar","userText","flexGrow","signupText","toolbar","minHeight","paddingLeft","paddingRight","search","position","shape","fade","common","white","marginLeft","width","breakpoints","up","spacing","inputRoot","inputInput","transition","transitions","create","Navbar","user","setAnchorEl","showSignupFlag","setShowSignupFlag","snakMessage","setSnakMessage","auth","handleSignupClick","event","currentTarget","handleHelpClick","AppBar","Toolbar","IconButton","AccountCircle","Typography","noWrap","Menu","keepMounted","Boolean","MenuItem","axios","get","then","res","updateUser","catch","err","message","HelpOutline","root","input","pass","record","post","login","data","String","indexOf","clearUserData","firstname","lastname","signUp","Snackbar","autoHideDuration","App","Container","component","style","paddingTop","CssBaseline","this","state","handleUser","Grid","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef4816e.chunk.js","sourcesContent":["import React from 'react'\nimport {Popover, InputBase, Button} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({ \n    container: {\n      display: \"flex\",\n      gap: \"10px\",\n      flexDirection: \"column\",\n      padding: \"15px\",\n      border: \"2px solid #e34d7d\", \n      borderRadius: \"5px\",\n      backgroundColor: \"#3f51b5\",\n      color: \"#fff\",\n    },\n    inputText: {\n        backgroundColor: theme.palette.background.default\n    }\n}));\n\nexport function SignupMenu(props) { //open, anchor, handleSignup, handleClose\n    const [firstName, setFirstName ] = React.useState(\"\");\n    const [lastName, setLastName ] = React.useState(\"\");\n    const [username, setUsername ] = React.useState(\"\");\n    const [password, setPassword ] = React.useState(\"\");\n    const classes = useStyles();\n    //const open = Boolean(props.anchor);\n\n    const handleSignup = () => {\n        if (props.handleSignup)\n            props.handleSignup(firstName, lastName, username, password, () => {\n                setFirstName('');\n                setLastName('');\n                setUsername('');\n                setPassword('');\n            });\n    }\n\n    const handleClose = () => {\n        if (props.handleClose)\n            props.handleClose();\n    }\n\n    const handleFirstName = e => setFirstName(e.target.value);\n    const handleLastName = e => setLastName(e.target.value);\n    const handleUser = e => setUsername(e.target.value);\n    const handlePassword = e => setPassword(e.target.value);\n    return (\n        <Popover\n            id=\"popper\"\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }} >\n                <div className={classes.container}>\n                <InputBase className={classes.inputText} placeholder=\"FirstName\"\n                    onChange={handleFirstName} value={firstName}/>\n                <InputBase className={classes.inputText} placeholder=\"LastName\"\n                    onChange={handleLastName} value={lastName}/>\n                <InputBase className={classes.inputText} placeholder=\"User\"\n                    onChange={handleUser} value={username}/>\n                <InputBase type={\"password\"} className={classes.inputText} \n                    placeholder=\"password\" onChange={handlePassword} value={password}/>\n                <Button onClick={handleSignup} variant=\"contained\" color=\"primary\">\n                    Sign Up\n                </Button>\n                </div>\n            </Popover>\n    )\n}","import React from \"react\";\nimport {Popover, Button} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        maxWidth: \"450px\",\n        padding: \"15px\",\n        border: \"2px solid #e34d7d\", \n        borderRadius: \"5px\",\n        backgroundColor: \"#3f51b5\",\n        color: \"#fff\",\n    },\n    topics: {\n        fontSize: \"large\",\n        //color: \"#e34d7d\",\n        marginBottom: \"0\"\n    },\n    paragraph: {\n        marginTop: \"0\"\n    }\n}));\n\nexport function ShowHelp(props) { //open, anchor, handleClose\n    const classes = useStyles();\n    //const open = Boolean(props.anchor);\n\n    const handleClose = () => {\n        if (props.handleClose)\n            props.handleClose();\n    }\n\n    return (\n        <Popover\n            id=\"popper\"\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}>\n            <div className={classes.container}>\n                <p className={classes.topics}>How it works</p>\n                <p className={classes.paragraph}>QCard is an application designed for helping you learn German words. It ask you to translate random German word to English and compares the result with an internal dictionary. Than displays the result in a table and show a graphical statistics of your success. It is expected you to improve with time :)</p>\n                <p className={classes.topics}>Sign up</p>\n                <p className={classes.paragraph}>Signing up is very easy, no private information is required. User names are optional and are displayed on the status bar. The login is used to show your own success rate. In case you are not logged in, the results are registered to the deafult Guset account and the success rate is mixed with all other Guests.</p>\n                <p className={classes.topics}>Random words</p>\n                <p className={classes.paragraph}>The application offers a random word and it is 50% chance to display an \"easy\" or \"hard\" word.</p>\n                <p className={classes.topics}>Periodic Q Cards</p>\n                <p className={classes.paragraph}>You can also activate Q cards to show up in random time intervals. The application can notify you when a new card is avalable. This feature is usefull if you work on something else and you can get questions from time to time to help you learn German words effortless.</p>\n                <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n                    OK\n                </Button>\n            </div>\n        </Popover>\n    );\n}","import React from 'react';\nimport { AppBar, Toolbar, InputBase, Button, IconButton, fade, Typography, Snackbar,\n  Menu, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AccountCircle, HelpOutline } from '@material-ui/icons';\nimport { signUp, signOut, login } from '../api/wordsdb';\nimport { SignupMenu } from './SignupMenu';\nimport { ShowHelp } from './ShowHelp';\n//import MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      borderRadius: \"5px\"\n    },\n    userText: {\n      //marginRight: theme.spacing(2),\n      flexGrow: 1,\n    },\n    signupText: {\n      color: \"inherit\",\n      background: \"inherit\"\n    },\n    toolbar: {\n      minHeight: \"48px\",\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",  \n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 1),\n      // vertical padding + font size from searchIcon\n      //paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }));\n\n\nexport default function Navbar(props) {\n    const [username, setUsername ] = React.useState(\"\");\n    const [password, setPassword ] = React.useState(\"\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [showSignupFlag, setShowSignupFlag] = React.useState(true);\n    const [snakMessage, setSnakMessage] = React.useState(null);\n    const classes = useStyles();\n    let user;\n    if (props.user.firstName || props.user.lastName)\n      user = (props.user.firstName || \"\") + \" \" + (props.user.lastName || \"\");\n    else\n      user = props.user.id;\n    let auth = user !== \"Guest\";\n\n    const handleSignupClick = (event) => {\n      setShowSignupFlag(true);\n      setAnchorEl(event.currentTarget);\n    };\n    const handleHelpClick = (event) => {\n      setShowSignupFlag(false);\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    }\n\n    const handleSignup = (firstName, lastName, username, password, clearUserData) => {\n      setAnchorEl(null);\n      if (! username || ! password)\n        return;\n      signUp(firstName, lastName, username, password).then( (res)=> {\n        //console.log(\"Signup:\" +JSON.stringify(res.data));\n        if (props.updateUser) {\n          props.updateUser(res.data);\n          clearUserData();\n          //  id: username,\n          //  firstName: firstName,\n          //  lastName: lastName\n          //});\n        }\n      }).catch((err) => {\n        //console.log(JSON.stringify(err));\n        if (err.message) {\n          if (String(err.message).indexOf(\"code 401\") >0)\n            setSnakMessage(\"User name already taken\");\n          else\n            setSnakMessage(err.message);\n        }\n      });\n    }\n\n    const handleLogin = () => {\n      login(username, password).then( (res)=> {\n        //console.log(\"Login:\" +JSON.stringify(res.data));\n        if (props.updateUser)\n          props.updateUser(res.data);\n      }).catch((err) => {\n        //console.log(JSON.stringify(err));\n        if (err.message) {\n          if (String(err.message).indexOf(\"code 401\") > -1)\n            setSnakMessage(\"User name or the password are not correct\");\n          else if (String(err.message).indexOf(\"code 400\") > -1)\n            setSnakMessage(\"Please specify user name and password\");\n          else\n            setSnakMessage(err.message);\n        }\n      });\n    }\n\n    const handleLogout = () => {      \n      setAnchorEl(null);\n      signOut().then( (res)=> {\n        //console.log(\"Signup:\" +JSON.stringify(res));\n        if (props.updateUser)\n          props.updateUser({ id:\"Guest\" });\n      }).catch((err) => {\n        //console.log(JSON.stringify(err));\n        if (err.message) {\n            setSnakMessage(err.message);\n        }\n      });\n    }\n\n    const handleUser = e => setUsername(e.target.value);\n    const handlePass = e => setPassword(e.target.value);\n    const handleSnakClose = () => setSnakMessage(null);\n\n    return (\n        <AppBar className={classes.appBar} position=\"static\" color=\"primary\">\n          {auth ? \n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleSignupClick}\n              >\n                <AccountCircle />\n              </IconButton>\n              <Typography className={classes.userText} variant=\"h6\" noWrap>\n                {user}\n              </Typography>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n              <IconButton\n                color=\"inherit\"\n                onClick={handleHelpClick}>\n                <HelpOutline/>\n              </IconButton>\n            </Toolbar>\n           :   \n            <Toolbar className={classes.toolbar}>\n              <Typography className={classes.userText} variant=\"h6\" noWrap>\n                {user}\n              </Typography>\n              <div className={classes.search}>\n                <InputBase\n                placeholder=\"Username\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }} onChange={handleUser} value={username}/>\n              </div>\n              <div className={classes.search}>\n                <InputBase\n                placeholder=\"Password\"\n                type=\"password\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }} onChange={handlePass} value={password}/>\n              </div>\n              <Button onClick={handleLogin} variant=\"contained\" color=\"primary\">\n                Login\n              </Button>\n              <Button className={classes.signupText} \n                onClick={handleSignupClick}\n                variant=\"text\"\n                color=\"primary\"\n                aria-describedby=\"popper\"\n                //aria-controls=\"menu-appbar\"\n                //aria-haspopup=\"true\"\n                >\n                <Typography variant=\"caption\" noWrap>\n                  Signup\n                </Typography>\n              </Button>\n              <IconButton\n                color=\"inherit\"\n                onClick={handleHelpClick}>\n                <HelpOutline/>\n              </IconButton>\n              <SignupMenu open={Boolean(anchorEl) && showSignupFlag} anchor={anchorEl} handleSignup={handleSignup} handleClose={handleClose}/>\n            </Toolbar>\n          }\n        <ShowHelp open={Boolean(anchorEl) && ! showSignupFlag} anchor={anchorEl} handleClose={handleClose}/>\n        <Snackbar open={Boolean(snakMessage)} autoHideDuration={6000} \n          onClose={handleSnakClose} message={snakMessage} \n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>            \n        </Snackbar>\n      </AppBar>\n      \n    )\n}","import axios from \"axios\";\n\nexport function getWord(id) {\n  return axios.get('word/' +String(id));\n}\n\nexport function getInfo() {\n    return axios.get('info/');\n}\n\nexport function saveRecord(record) {\n    return axios.post('card/', record);\n}\n\nexport function signUp(firstname, lastname, user, pass) {\n    const record =  {\n        firstName: firstname,\n        lastName: lastname,\n        user: user,\n        password:pass\n    };\n    //console.log(\"Invoked wordsdb.signUp, record:\" +JSON.stringify(record));\n    return axios.post('signup/', record);\n}\n\nexport function login(user, pass) {\n    const record =  {\n        user: user,\n        password:pass\n    };\n    //console.log(\"Invoked wordsdb.login, record:\" +JSON.stringify(record));\n    return axios.post('login/', record);\n}\n\nexport function signOut() {\n    return axios.get('logout/');\n}\n\nexport function getAllforUser(user) {\n    const res = axios.get('cards/'+ String(user), {params: {order: \"asc\"}});\n    return res.then(res => {\n        //console.log(JSON.stringify(res));\n        return res.data.map( doc => {\n            let timeIndex = doc._id.indexOf('&') +1;\n            let time = doc._id.substr(timeIndex);\n            return {...doc, _id: time}\n        })\n    })\n}\n\nexport function getLast5forUser(user) {\n    const res = axios.get('cards/'+ String(user), {params:{limit: 5, order: \"desc\"}});\n    return res.then(res => {\n        //console.log(JSON.stringify(res));\n        return res.data.map( doc => {\n            let timeIndex = doc._id.indexOf('&') +1;\n            let time = doc._id.substr(timeIndex);\n            return {...doc, _id: new Date(time).toLocaleString()}\n        })\n    })\n}","import {Container, Avatar, Typography, Grid, TextField,\n  FormControlLabel, Switch, CssBaseline, Button} from '@material-ui/core';\nimport RotateRightTwoTone from '@material-ui/icons/RotateRightTwoTone';\nimport Navbar from './components/Navbar';\n\nexport default function App() {\n  \n  return (\n    <Container component=\"main\" maxWidth=\"sm\" style={{paddingTop: \"0px\", border: \"2px solid #e34d7d\", borderRadius: \"7px\"}}>\n      <CssBaseline />\n      <Navbar user={this.state.user} updateUser={this.handleUser}/>\n      <Grid container spacing={3} style={{margin: \"20px -10px 5px\"}}>\n        \n      </Grid>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}